<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.neo4j</groupId>
  <artifactId>parent</artifactId>
  <version>3.4.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Neo4j</name>
  <description>Neo4j Graph Database</description>
  <inceptionYear>2002</inceptionYear>

  <organization>
    <name>The Neo4j Graph Database Project</name>
    <url>https://neo4j.com/</url>
  </organization>

  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0-standalone.html</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>neo4j</id>
      <name>The Neo4j Team</name>
      <url>https://neo4j.com/</url>
      <organization>Neo4j Inc.</organization>
      <organizationUrl>https://neo4j.com/</organizationUrl>
    </developer>
  </developers>

  <mailingLists>
    <mailingList>
      <name>Neo4j Community Discussions</name>
      <subscribe>https://groups.google.com/forum/#!forum/neo4j</subscribe>
    </mailingList>
  </mailingLists>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/neo4j/neo4j/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>neo4j-snapshot-repository</id>
      <name>Neo4j Maven 2 snapshot repository</name>
      <url>http://m2.neo4j.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <licensing.prepend.text>notice-agpl-prefix.txt</licensing.prepend.text>
    <licensing.phase>compile</licensing.phase>
    <lucene.version>5.5.0</lucene.version>
    <bouncycastle.version>1.53</bouncycastle.version>
    <generate-config-docs-phase>prepare-package</generate-config-docs-phase>
    <test.runner.jvm.settings.additional></test.runner.jvm.settings.additional>
    <test.runner.jvm.settings>-Xmx2G -XX:+UseG1GC -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=target/test-data -Dorg.neo4j.unsafe.impl.internal.dragons.UnsafeUtil.DIRTY_MEMORY=true
      -Dorg.neo4j.unsafe.impl.internal.dragons.UnsafeUtil.CHECK_NATIVE_ACCESS=true
      -Dorg.neo4j.io.pagecache.impl.muninn.usePreciseCursorErrorStackTraces=true
      -Dorg.neo4j.kernel.impl.api.KernelStatement.trackStatements=true
      -XX:+UnlockExperimentalVMOptions -XX:+TrustFinalNonStaticFields ${test.runner.jvm.settings.additional}
    </test.runner.jvm.settings>
    <jetty.version>9.2.22.v20170606</jetty.version>
    <findbugs.version>3.0.1</findbugs.version>
    <clirr.comparisonVersion>3.0.0</clirr.comparisonVersion>
    <git.commit>unknown-commit</git.commit>
    <forkCounts>0</forkCounts>
    <maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>

    <licensesVersion>7</licensesVersion>
    <license-text.header>AGPL-3-header.txt</license-text.header>

    <scala.version>2.11.11</scala.version>
    <scala.binary.version>2.11</scala.binary.version>
  </properties>

  <modules>
    <module>community</module>
    <module>enterprise</module>
    <module>integrationtests</module>
    <module>stresstests</module>
    <module>tools</module>
    <module>packaging</module>
  </modules>

  <build>
    <!-- Define project structure -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources/META-INF/</directory>
        <targetPath>META-INF</targetPath>
      </resource>
      <resource>
        <directory>${basedir}</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>COPYRIGHT.txt</include>
          <include>NOTICE.txt</include>
          <include>LICENSE.txt</include>
          <include>LICENSES.txt</include>
          <include>README*</include>
          <include>CHANGES.txt</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>${basedir}</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>COPYRIGHT.txt</include>
          <include>NOTICE.txt</include>
          <include>LICENSE.txt</include>
          <include>LICENSES.txt</include>
          <include>README*</include>
          <include>CHANGES.txt</include>
        </includes>
      </testResource>
    </testResources>

    <!-- Plugin definitions -->
    <pluginManagement>
      <plugins>

        <!-- Here we define our public API, it should be kept in sync with clirr settings below -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.0.0-M1</version>
          <executions>
            <execution>
              <id>generate-javadocs</id>
              <goals>
                <goal>javadoc-no-fork</goal>
              </goals>
              <phase>prepare-package</phase>
            </execution>
          </executions>
          <configuration>
            <header>Neo4j</header>
            <doctitle>Neo4j ${project.version} API</doctitle>
            <windowtitle>Neo4j ${project.version} API</windowtitle>
            <show>public</show>

            <detectLinks>false</detectLinks>
            <detectOfflineLinks>false</detectOfflineLinks>
            <quiet>true</quiet>
            <sourcepath>${project.build.sourceDirectory}</sourcepath>
            <reportOutputDirectory>${project.build.directory}/apidocs</reportOutputDirectory>

            <!-- Include the following packages... (yes, has to be one line) -->
            <subpackages>org.neo4j.backup:org.neo4j.graphalgo:org.neo4j.cypher.export:org.neo4j.cypher.javacompat:org.neo4j.graphdb:org.neo4j.helpers:org.neo4j.helpers.collection:org.neo4j.index:org.neo4j.jmx:org.neo4j.management:org.neo4j.server.helpers:org.neo4j.server.plugins:org.neo4j.server.rest.repr:org.neo4j.server.rest.web:org.neo4j.unsafe.batchinsert:org.neo4j.logging:org.neo4j.procedure</subpackages>
            <!-- ...unless the package contains -->
            <excludePackageNames>*.impl.*:*.internal.*:org.neo4j.helpers.progress:org.neo4j.logging.async:org.neo4j.server.rest.repr.formats:org.neo4j.server.rest.repr.util</excludePackageNames>

            <!-- Defines grouping for overview -->
            <groups>
              <group>
                <title>Graph database</title>
                <packages>org.neo4j.graphdb:org.neo4j.graphdb.*
                </packages>
              </group>
              <group>
                <title>Query language</title>
                <packages>org.neo4j.cypher.javacompat:org.neo4j.cypher.javacompat.*:org.neo4j.cypher.export</packages>
              </group>
              <group>
                <title>Graph algorithms</title>
                <packages>org.neo4j.graphalgo:org.neo4j.graphalgo.*</packages>
              </group>
              <group>
                <title>Management</title>
                <packages>org.neo4j.jmx:org.neo4j.jmx.*</packages>
              </group>
              <group>
                <title>Management (Enterprise edition)</title>
                <packages>org.neo4j.management:org.neo4j.management.*</packages>
              </group>
              <group>
                <title>Logging</title>
                <packages>org.neo4j.logging:org.neo4j.logging.*</packages>
              </group>
              <group>
                <title>Backup (Enterprise edition)</title>
                <packages>org.neo4j.backup</packages>
              </group>
              <group>
                <title>Import</title>
                <packages>org.neo4j.unsafe.batchinsert</packages>
              </group>
              <group>
                <title>Procedures</title>
                <packages>org.neo4j.procedure</packages>
              </group>
              <group>
                <title>Server Plugin API</title>
                <packages>org.neo4j.server:org.neo4j.server.*</packages>
              </group>
              <group>
                <title>Helpers</title>
                <packages>org.neo4j.helpers:org.neo4j.helpers.*</packages>
              </group>
              <group>
                <title>Explicit Indexes</title>
                <packages>org.neo4j.index:org.neo4j.index.*</packages>
              </group>
            </groups>
          </configuration>
        </plugin>

        <!-- Define what packages to treat as public API, it should be kept in sync with javadoc settings above -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>clirr-maven-plugin</artifactId>
          <version>2.8</version>
          <configuration>
            <failOnError>true</failOnError>
            <logResults>true</logResults>

            <!-- Public packages -->
            <!-- org.neo4j.backup:
            org.neo4j.graphalgo:
            org.neo4j.cypher.export:
            org.neo4j.cypher.javacompat:
            org.neo4j.graphdb:
            org.neo4j.helpers:
            org.neo4j.helpers.collection:
            org.neo4j.index:
            org.neo4j.jmx:
            org.neo4j.management:
            org.neo4j.server.helpers:
            org.neo4j.server.plugins:
            org.neo4j.server.rest.repr:
            org.neo4j.server.rest.web:
            org.neo4j.unsafe.batchinsert:
            org.neo4j.logging:
            org.neo4j.procedure -->
            <includes>
              <include>org/neo4j/graphalgo/*</include>
              <include>org/neo4j/graphdb/*</include>
              <include>org/neo4j/unsafe/batchinsert/*</include>
              <include>org/neo4j/procedure/*</include>
              <include>org/neo4j/helpers/*</include>
              <include>org/neo4j/jmx/*</include>
              <include>org/neo4j/management/*</include>
              <include>org/neo4j/logging/slf4j/*</include>
              <include>org/neo4j/cypher</include>
              <include>org/neo4j/index/lucene/*</include>
              <include>org/neo4j/index/lucene/unsafe/batchinsert/*</include>

              <include>org/neo4j/backup/OnlineBackupExtensionFactory.Dependencies</include>
              <include>org/neo4j/backup/OnlineBackupKernelExtension.BackupProvider</include>
              <include>org/neo4j/backup/TheBackupInterface</include>
              <include>org/neo4j/backup/BackupExtensionService</include>
              <include>org/neo4j/backup/BackupTool</include>
              <include>org/neo4j/backup/OnlineBackup</include>
              <include>org/neo4j/backup/OnlineBackupExtensionFactory</include>
              <!--<include>org/neo4j/backup/OnlineBackupKernelExtension</include> broken atm -->
              <include>org/neo4j/backup/OnlineBackupSettings</include>
              <include>org/neo4j/backup/StoreCopyResponsePacker</include>
              <include>org/neo4j/backup/IncrementalBackupNotPossibleException</include>
            </includes>
            <excludes>
              <exclude>org/neo4j/index/lucene/LuceneLabelScanStoreBuilder</exclude>
              <!-- Ignore all Cypher internals -->
              <exclude>org/neo4j/cypher/internal/*</exclude>
            </excludes>

            <!-- Ignored changes -->
            <ignored>
              <difference>
                <className>**</className>
                <method>**</method>
                <differenceType>7012</differenceType> <!-- Field was made final. -->
              </difference>
              <difference>
                <className>**</className>
                <field>**</field>
                <differenceType>6006</differenceType> <!-- Method added to interface -->
              </difference>
            </ignored>
          </configuration>

          <executions>
            <execution>
              <goals>
                <goal>check-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Testing setup -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
          <configuration>
            <forkCount>${forkCounts}</forkCount>
            <reuseForks>true</reuseForks>
            <argLine>${test.runner.jvm.settings}</argLine>
            <runOrder>random</runOrder>
            <systemPropertyVariables>
              <dbms.pagecache.memory.default.override>8m</dbms.pagecache.memory.default.override>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.20.1</version>
          <configuration>
            <argLine>${test.runner.jvm.settings}</argLine>
            <forkCount>${forkCounts}</forkCount>
            <reuseForks>true</reuseForks>
            <runOrder>random</runOrder>
            <systemPropertyVariables>
              <dbms.pagecache.memory.default.override>8m</dbms.pagecache.memory.default.override>
              <port.authority.directory>${user.dir}/target/port-authority-${maven.build.timestamp}</port.authority.directory>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Jar file packaging settings -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <executions>
            <!-- Augment default jar with url -->
            <execution>
              <id>default-jar</id>
              <configuration>
                <archive>
                  <manifest>
                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  </manifest>
                  <manifestEntries>
                    <Url>${project.organization.url}</Url>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
            <!-- Create test jar -->
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
            <!-- Create javadoc jar, will be empty if javadoc generation is skipped -->
            <execution>
              <id>create-javadoc-jar</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <classifier>javadoc</classifier>
                <classesDirectory>${project.build.directory}/apidocs/</classesDirectory>
                <includes>
                  <include>**/**</include>
                </includes>
                <excludes>
                  <exclude>javadoc.sh</exclude>
                  <exclude>javadoc.bat</exclude>
                  <exclude>options</exclude>
                  <exclude>packages</exclude>
                  <exclude>argfile</exclude>
                  <exclude>files</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Licensing settings -->
        <plugin>
          <groupId>org.neo4j.build.plugins</groupId>
          <artifactId>licensing-maven-plugin</artifactId>
          <version>1.7.5</version>
          <configuration>
            <failIfDisliked>true</failIfDisliked>
            <failIfMissing>true</failIfMissing>
            <plainTextReport>true</plainTextReport>
            <prependText>${licensing.prepend.text}</prependText>
            <excludedGroups>
              ^((org.neo4j){1}|(org.neo4j.app){1}|(org.neo4j.server.plugin){1}|(org.neo4j.assembly){1}|(org.neo4j.bolt){1}|(org.neo4j.build){1}|(org.neo4j.test){1})$
            </excludedGroups>
            <excludedArtifacts>^((neo4j-browser))$</excludedArtifacts>
            <includedScopes>compile</includedScopes>
          </configuration>
          <executions>
            <execution>
              <id>enforce-licensing-oss</id>
              <phase>${licensing.phase}</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <licensingRequirementFiles>
                  <licensingRequirementFile>licensing-requirements-base.xml</licensingRequirementFile>
                  <licensingRequirementFile>licensing-requirements-oss.xml</licensingRequirementFile>
                </licensingRequirementFiles>
                <thirdPartyLicensingFilename>${project.artifactId}-${project.version}-oss.txt
                </thirdPartyLicensingFilename>
              </configuration>
            </execution>
            <execution>
              <id>enforce-licensing-com</id>
              <phase>${licensing.phase}</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <licensingRequirementFiles>
                  <licensingRequirementFile>licensing-requirements-base.xml</licensingRequirementFile>
                  <licensingRequirementFile>licensing-requirements-com.xml</licensingRequirementFile>
                </licensingRequirementFiles>
                <thirdPartyLicensingFilename>${project.artifactId}-${project.version}.txt</thirdPartyLicensingFilename>
              </configuration>
            </execution>
            <execution>
              <id>list-all-licenses</id>
              <phase>${licensing.phase}</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <licensingRequirementFiles>
                  <licensingRequirementFile>licensing-requirements-base.xml</licensingRequirementFile>
                </licensingRequirementFiles>
                <thirdPartyLicensingFilename>${project.artifactId}-${project.version}-NOTICE.txt
                </thirdPartyLicensingFilename>
                <checkExistingNoticeFile>${project.build.directory}/../NOTICE.txt</checkExistingNoticeFile>
                <listPrependText>list-prefix.txt</listPrependText>
                <listReport>${project.artifactId}-${project.version}-LICENSES.txt</listReport>
                <checkExistingLicensesFile>${project.build.directory}/../LICENSES.txt</checkExistingLicensesFile>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.neo4j.build</groupId>
              <artifactId>licensecheck-config</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Default scala compile settings -->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.3.1</version>

          <configuration>
            <scalaVersion>${scala.version}</scalaVersion>
            <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
            <args>
              <arg>-Xmax-classfile-name</arg>
              <arg>100</arg>
              <arg>-Xlint</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xms64m</jvmArg>
              <jvmArg>-Xmx1024m</jvmArg>
            </jvmArgs>
          </configuration>

          <!-- This is needed to mix scala and java code in the same module -->
          <executions>
            <execution>
              <id>scala-compile</id>
              <phase>process-resources</phase>
              <goals>
                <goal>add-source</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Plugin version management -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.5.5</version>
          <configuration>
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.neo4j.build.plugins</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>3</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- Default plugins -->
    <plugins>

      <!-- Execute integration tests by default -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <!-- Checkstyle is always validated -->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>build/checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <logViolationsToConsole>true</logViolationsToConsole>
          <failsOnError>true</failsOnError>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.2</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Validate that the public API is unchanged -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>clirr-maven-plugin</artifactId>
      </plugin>

      <!-- Creates source jar if source exits -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Always validate licenses -->
      <plugin>
        <groupId>org.neo4j.build.plugins</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.neo4j.maven</groupId>
            <artifactId>licenses</artifactId>
            <version>${licensesVersion}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>check-licenses</id>
            <!-- fail as early as possible -->
            <phase>initialize</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <strictCheck>true</strictCheck>
          <header>${license-text.header}</header>
          <includes>
            <include>src/**/*.java</include>
            <include>src/**/*.js</include>
            <include>src/**/*.scala</include>
            <include>src/**/*.xml</include>
            <include>src/**/*.feature</include>
            <include>src/**/*.g4</include>
          </includes>
          <excludes>
            <exclude>**/lib/*.js</exclude>
            <exclude>**/lib/**/*.js</exclude>
            <exclude>**/javascript/vend/**</exclude>
          </excludes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
            <scala>SLASHSTAR_STYLE</scala>
            <feature>SCRIPT_STYLE</feature>
            <g4>SLASHSTAR_STYLE</g4>
          </mapping>
          <timestampPropertyName>currentYear</timestampPropertyName>
          <properties>
            <inceptionYear>${project.inceptionYear}</inceptionYear>
          </properties>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>parallelTestExecution</id>
      <activation>
        <property>
          <name>!sequentialTests</name>
        </property>
      </activation>
      <properties>
        <forkCounts>1C</forkCounts>
      </properties>
    </profile>
    <!--
     Git information extraction profiles.
     Activate by adding the required Git information to the environment, e.g. on *nix:

     export GIT_COMMIT
     GIT_COMMIT=$(git rev-parse HEAD)
    -->
    <profile>
      <id>attach-git-info-commit</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.GIT_COMMIT</name>
        </property>
      </activation>
      <properties>
        <git.commit>${env.GIT_COMMIT}</git.commit>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-analyzers-common</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-codecs</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-queryparser</artifactId>
        <version>${lucene.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-sandbox</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>2.3.3</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-nop</artifactId>
        <version>1.7.22</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.7</version>
      </dependency>

      <!-- testing -->
      <dependency>
        <groupId>org.neo4j.driver</groupId>
        <artifactId>neo4j-java-driver</artifactId>
        <version>1.4.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.server</groupId>
        <artifactId>apacheds-server-integ</artifactId>
        <version>2.0.0-M21</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava-testlib</artifactId>
        <version>19.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.2</version>
        <classifier>tests</classifier>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>4.4.5</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.7</version>
        <scope>test</scope>
      </dependency>

      <!-- The JUnit-Hamcrest-Mockito combo -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
          <version>1.3</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-library</artifactId>
          <version>1.3</version>
          <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.10.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.9</version>
        <scope>test</scope>
      </dependency>

      <!-- scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scalap</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <!-- other -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>1.10</version>
        <type>jar</type>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <artifactId>commons-digester</artifactId>
            <groupId>commons-digester</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Added (directly) to avoid version clash in commons-configuration. -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-digester3</artifactId>
        <version>3.2</version>
        <type>jar</type>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.9.3</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.5</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.12</version>
      </dependency>

      <!-- Netty is used by three components: Com, Cluster and Bolt Socket Transport.
           Netty 4 is a significant improvement over Netty 3, in that it introduces
           buffer pooling (among lots of other improvements), and thus we want to move
           to Netty 4 to reduce GC overhead. Netty 4 (io.netty:netty-all) can co-exist
           with Netty 3 (io.netty:netty) because they have different modules and different
           package structure. As such, the two netty dependencies represents the in-between
           state while we move all remaining Netty 3 uses over to Netty 4 -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>3.9.9.Final</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>4.1.15.Final</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>janino</artifactId>
        <version>2.6.1</version>
      </dependency>
      <dependency>
        <groupId>net.sf.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>2.3</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-client</artifactId>
        <version>1.19</version>
        <exclusions>
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>1.19</version>
        <exclusions>
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-servlet</artifactId>
        <version>1.19</version>
        <exclusions>
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey.contribs</groupId>
        <artifactId>jersey-multipart</artifactId>
        <version>1.19</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>1.9.13</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-jaxrs</artifactId>
        <version>1.9.13</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>1.9.13</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.websocket</groupId>
        <artifactId>websocket-client</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mozilla</groupId>
        <artifactId>rhino</artifactId>
        <version>1.7R4</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.neo4j.3rdparty.javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>1.1.2.r612</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>3.1.2</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-graphite</artifactId>
        <version>3.1.2</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
