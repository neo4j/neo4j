[[tutorials-java-embedded-tx-interrupt]]
Interrupting a running transaction
==================================

Sometimes you may want to interrupt (abort) a long running transaction from another thread.


[TIP]
The source code used in this example is found here:
https://github.com/neo4j/neo4j/blob/{neo4j-git-tag}/community/embedded-examples/src/main/java/org/neo4j/examples/InterruptTransactions.java[InterruptTransactions.java]

To begin with, we start the database server:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/InterruptTransactions.java
classifier=sources
tag=startDb
----

Now we start creating an infinite binary tree of nodes in the database, as an example of a long running transaction.

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/InterruptTransactions.java
classifier=sources
tag=mkTree
----

To prevent this from running forever, after opening the transaction we added a call to `interruptAfter`. This call creates a separate thread
that waits for a second before aborting the long running transaction.

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/InterruptTransactions.java
classifier=sources
tag=interruptAfter
----

Running this will execute the long running transaction for roundabout one second and prints the maximum depth of the tree that was created
before the transaction was interrupted.

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/InterruptTransactions.java
classifier=sources
tag=interruptAfter
----

Finally, let's shut down the database again.

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/InterruptTransactions.java
classifier=sources
tag=shutdownDb
----

