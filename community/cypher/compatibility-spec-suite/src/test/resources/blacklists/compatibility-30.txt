// missing toInteger()
Number-typed integer comparison
Number-typed float comparison
Any-typed string comparison
Use collection lookup based on parameters when there is rhs type information
SKIP with an expression that does not depend on variables
LIMIT with an expression that does not depend on variables
`toInteger()`
`toInteger()` on float
`toInteger()` returning null on non-numerical string
`toInteger()` handling mixed number types
`toInteger()` handling Any type
`toInteger()` on a list of strings
`toInteger()` failing on invalid arguments

// missing toBoolean()
`toBoolean()` on valid literal string
`toBoolean()` on booleans
`toBoolean()` on variables with valid string values
`toBoolean()` on invalid strings
`toBoolean()` on invalid types

// new parameter syntax $
Delete node from a list
Delete node from a list
Delete relationship from a list
Use dynamic property lookup based on parameters when there is no type information
Use dynamic property lookup based on parameters when there is lhs type information
Use dynamic property lookup based on parameters when there is rhs type information
Use collection lookup based on parameters when there is no type information
Use collection lookup based on parameters when there is lhs type information
Fail at runtime when attempting to index with an Int into a Map
Fail at runtime when trying to index into a map with a non-string
Fail at runtime when attempting to index with a String into a Collection
Fail at runtime when trying to index into a list with a list
Fail at runtime when trying to index something which is not a map or collection
`percentileDisc()`
`percentileCont()`
`percentileCont()` failing on bad arguments
`percentileDisc()` failing on bad arguments
`percentileDisc()` failing in more involved query
Using `keys()` on a parameter map
Use params in pattern matching predicates
Matching with many predicates and larger pattern
ORDER BY with negative parameter for LIMIT should not generate errors
Start the result from the second row by param
Get rows in the middle by param
Using null in AND
Using null in OR
Using null in XOR
Using null in IN
Creating nodes from an unwound parameter list
Unwind with merge

// unsupported pattern comprehensions
Pattern comprehension and ORDER BY
Returning a pattern comprehension
Returning a pattern comprehension with label predicate
Returning a pattern comprehension with bound nodes
Using a pattern comprehension in a WITH
Using a variable-length pattern comprehension in a WITH
Using pattern comprehension in RETURN
Aggregating on pattern comprehension
Using pattern comprehension to test existence
Pattern comprehension inside list comprehension
Get node degree via size of pattern comprehension
Get node degree via size of pattern comprehension that specifies a relationship type
Get node degree via size of pattern comprehension that specifies multiple relationship types
Introducing new node variable in pattern comprehension
Introducing new relationship variable in pattern comprehension

// bugged in spec, awaiting update
SKIP with an expression that depends on variables should fail
LIMIT with an expression that depends on variables should fail
Fail when returning type of deleted relationships
Fail when returning properties of deleted relationships
