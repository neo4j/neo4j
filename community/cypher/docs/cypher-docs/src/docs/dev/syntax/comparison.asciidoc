[[cypher-comparison]]
== Equality and Comparison of Values ==

=== Equality ===

Cypher supports comparing values (see <<cypher-values>>) by equality using the `=` and `<>` operators.

Values of the same type are only equal if they are the same identical value (e.g. `3 = 3` and `"x" <> "xy"`).

Maps are only equal if they map exactly the same keys to equal values and collections are only equal if they contain the same sequence of equal values (e.g. `[3, 4] = [1+2, 8/2]`).

Values of different types are considered as equal according to the following rules:

* Paths are treated as collections of alternating nodes and relationships and are equal to all collections that contain that very same sequence of nodes and relationships.
* Testing any value against `NULL` with both the `=` and the `<>` operators always is `NULL`.
This includes `NULL = NULL` and `NULL <> NULL`.
The only way to reliably test if a value `v` is  `NULL` is by using the special `v IS NULL`, or `v IS NOT NULL` equality operators.

All other combinations of types of values cannot be compared with each other.
Especially, nodes, relationships, and literal maps are incomparable with each other.

It is an error to compare values that cannot be compared.

[[cypher-ordering]]
== Ordering and Comparison of Values ==

The comparison operators `<=` (for ascending) and `>=` (for descending) are used to compare values for ordering.
The following points give some details on how the comparison is performed.

* Numerical values are compared for ordering using numerical order (e.g. `3 < 4` is true).
* String values are compared for ordering using lexicographic order (e.g. `"x" < "xy"`).
* Boolean values are compared for ordering such that `false < true`.
* Comparing for ordering when one argument is +NULL+ is +NULL+ (e.g. `NULL < 3` is +NULL+).
* It is an error to compare other types of values with each other for ordering.

For other comparison operators, see <<query-operators-comparison>>.

