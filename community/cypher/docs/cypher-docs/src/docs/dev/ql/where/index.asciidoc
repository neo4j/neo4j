[[query-where]]
= Where

[abstract]
`WHERE` adds constraints to the patterns in an `(OPTIONAL)` `MATCH` clause or filters the results of a `WITH` clause.

`WHERE` is not a clause in it's own right -- rather, it's part of `MATCH`, `OPTIONAL MATCH`, `START` and `WITH`.

In the case of `WITH` and `START`, `WHERE` simply filters the results.

For `MATCH` and `OPTIONAL MATCH` on the other hand, `WHERE` adds constraints to the patterns described.
It should not be seen as a filter after the matching is finished.

[NOTE]
In the case of multiple (++OPTIONAL++) +MATCH+ clauses, the predicate in +WHERE+ is always a part of the patterns in the directly preceding +MATCH+.
Both results and performance may be impacted if the +WHERE+ is put inside the wrong +MATCH+ clause.

.Graph
include::includes/cypher-where-graph.asciidoc[]

== Basic usage ==

:leveloffset: 3

include::boolean-operations.asciidoc[]

include::filter-on-node-label.asciidoc[]

include::filter-on-node-property.asciidoc[]

include::property-exists.asciidoc[]

:leveloffset: 2

== Regular expressions ==

:leveloffset: 3

include::regular-expressions.asciidoc[]

include::escaping-in-regular-expressions.asciidoc[]

include::case-insensitive-regular-expressions.asciidoc[]

:leveloffset: 2

[[query-where-patterns]]
== Using patterns in WHERE ==

:leveloffset: 3

include::filter-on-patterns.asciidoc[]

include::filter-on-patterns-using-not.asciidoc[]

include::filter-on-patterns-with-properties.asciidoc[]

include::filtering-on-relationship-type.asciidoc[]

:leveloffset: 2

== Collections ==

:leveloffset: 3

include::in-operator.asciidoc[]

:leveloffset: 2

== Missing properties and values ==

:leveloffset: 3

include::default-to-false-if-property-is-missing.asciidoc[]

include::default-to-true-if-property-is-missing.asciidoc[]

include::filter-on-null.asciidoc[]


