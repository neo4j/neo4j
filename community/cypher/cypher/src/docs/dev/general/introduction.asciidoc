[[cypher-introduction]]
= What is Cypher? =

_Cypher_ is a declarative graph query language that allows for expressive and efficient querying and updating of the graph store without having to write traversals through the graph structure in code.
Cypher is still growing and maturing, and that means that there probably will be breaking syntax changes.
It also means that it has not undergone the same rigorous performance testing as other Neo4j components.

Cypher is designed to be a humane query language, suitable for both developers and (importantly, we think) operations professionals who want to make ad-hoc queries on the database.
Our guiding goal is to make the simple things simple, and the complex things possible.
Its constructs are based on English prose and neat iconography, which helps to make it (somewhat) self-explanatory.

Cypher is inspired by a number of different approaches and builds upon established practices for expressive querying.
Most of the keywords like +WHERE+ and +ORDER BY+ are inspired by http://en.wikipedia.org/wiki/SQL[SQL].
Pattern matching borrows expression approaches from http://en.wikipedia.org/wiki/SPARQL[SPARQL].

Being a declarative language, Cypher focuses on the clarity of expressing _what_ to retrieve from a graph, not _how_
to do it, in contrast to imperative languages like Java, and scripting languages like
http://gremlin.tinkerpop.com[Gremlin] and http://neo4j.rubyforge.org/[the JRuby Neo4j bindings].
This makes the concern query optimization an implementation detail which is not forced upon to the user.

The query language is comprised of several distinct clauses.

* +START+: Starting points in the graph, obtained via index lookups or by element IDs.

* +MATCH+: The graph pattern to match, bound to the starting points in +START+.

* +WHERE+: Filtering criteria.

* +RETURN+: What to return.

* +CREATE+: Creates nodes and relationships.

* +DELETE+: Removes nodes, relationships and properties.

* +SET+: Set values to properties.

* +FOREACH+: Performs updating actions once per element in a list.

* +WITH+: Divides a query into multiple, distinct parts.

Let's see three of them in action.

include::intro-examples.asciidoc[]

To use Cypher from Java, see <<tutorials-cypher-java>>.
For more Cypher examples, see <<data-modeling-examples>> as well.

