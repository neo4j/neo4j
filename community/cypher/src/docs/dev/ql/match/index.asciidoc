[[query-match]]
Match
=====

== Introduction ==

The +MATCH+ clause allows you to specify the pattern Cypher will search for in the database.
Nodes and relationships that are already known at this stage are called _bound pattern elements_.
Cypher will now try to find the unknown parts of the pattern.

If +MATCH+ is the first clause in your query, nothing is bound at this stage.
Cypher needs start points to do it's pattern matching.
If no bound nodes exist, Cypher can scan all nodes in the database, all nodes with a certain label, or it can use indexes to quickly find the relevant start points.
If you want to use index hints to force Cypher to use a specific index, read more here: <<query-using>>.

After finding start points -- either by using scans, indexes or already bound points, the execution engine will use pattern matching to find matching sub graphs.
Because Cypher is declarative, it can change order of these operations.
+WHERE+ predicates can be evaluated before pattern matching, or during pattern matching, not only filtering after finding matches.


[TIP]
In the +MATCH+ clause, patterns are used a lot.
Read <<introduction-pattern>> for an introduction.

The following graph is used for the examples below:

.Graph
include::includes/cypher-match-graph.asciidoc[]

include::get-all-nodes.asciidoc[]

include::get-all-nodes-with-a-label.asciidoc[]

include::related-nodes.asciidoc[]

include::outgoing-relationships.asciidoc[]

include::directed-relationships-and-identifier.asciidoc[]

include::match-by-relationship-type.asciidoc[]

include::match-by-multiple-relationship-types.asciidoc[]

include::match-by-relationship-type-and-use-an-identifier.asciidoc[]

include::match-with-labels.asciidoc[]

include::match-with-either-one-or-another-label.asciidoc[]

include::relationship-types-with-uncommon-characters.asciidoc[]

include::multiple-relationships.asciidoc[]

include::variable-length-relationships.asciidoc[]

include::relationship-identifier-in-variable-length-relationships.asciidoc[]

include::zero-length-paths.asciidoc[]

include::optional-relationship.asciidoc[]

include::optional-typed-and-named-relationship.asciidoc[]

include::properties-on-optional-elements.asciidoc[]

include::shortest-path.asciidoc[]

include::all-shortest-paths.asciidoc[]

include::named-path.asciidoc[]

include::matching-on-a-bound-relationship.asciidoc[]

include::match-with-or.asciidoc[]

