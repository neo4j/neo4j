<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.neo4j</groupId>
    <artifactId>cypher-parent</artifactId>
    <version>2.2-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.neo4j</groupId>
  <artifactId>neo4j-cypher-compiler-2.2</artifactId>
  <packaging>jar</packaging>
  <version>2.2-SNAPSHOT</version>
  <name>Neo4j - Cypher Compiler 2.2</name>
  <description>Compiler for Cypher 2.2</description>
  <url>http://components.neo4j.org/${project.artifactId}/${project.version}</url>

  <scm>
	  <url>https://github.com/neo4j/neo4j/tree/master/community/cypher/cypher-compiler-2.2</url>
  </scm>

  <properties>
    <version-package>cypher.internal.compiler.v2_2</version-package>
    <scoverage.plugin.version>1.0.4</scoverage.plugin.version>
    <scoverage.scalacPluginVersion>1.0.4</scoverage.scalacPluginVersion>
  </properties>

  <licenses>
    <license>
      <name>GNU General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
      <comments>The software ("Software") developed and owned by Network Engine for
        Objects in Lund AB (referred to in this notice as "Neo Technology") is
        licensed under the GNU GENERAL PUBLIC LICENSE Version 3 to all third
        parties and that license is included below.

        However, if you have executed an End User Software License and Services
        Agreement or an OEM Software License and Support Services Agreement, or
        another commercial license agreement with Neo Technology or one of its
        affiliates (each, a "Commercial Agreement"), the terms of the license in
        such Commercial Agreement will supersede the GNU GENERAL PUBLIC LICENSE
        Version 3 and you may use the Software solely pursuant to the terms of
        the relevant Commercial Agreement.
      </comments>
    </license>
  </licenses>

  <build>
    <plugins>

      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
      </plugin>

      <!-- run with mvn scoverage:check -->

      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>${scoverage.plugin.version}</version>
        <configuration>
          <!-- build server should fail based on generated report -->
          <scalaVersion>${scala.version}</scalaVersion>
          <minimumCoverage>68</minimumCoverage>
          <failOnMinimumCoverage>false</failOnMinimumCoverage>
          <highlighting>true</highlighting>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
              <goal>post-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>


  <reporting>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.8</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- run with

           mvn scoverage:report

           The output will appear in target/site/scoverage but all relative URLs are wrong

           On OS X and assuming your checkout is below /Users, you can fix them locally using something like:

           find . -type f  -exec sed -i backup 's/\/Users/Users/g' {} \;
      -->
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>${scoverage.plugin.version}</version>
      </plugin>

    </plugins>
  </reporting>

<dependencies>

    <!-- shared versions are defined in the parent pom -->

    <!-- scala -->

    <dependency>
      <artifactId>scala-reflect</artifactId>
      <groupId>org.scala-lang</groupId>
    </dependency>

    <!-- neo4j -->

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-lucene-index</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-io</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-graph-matching</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-graph-algo</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- neo4j testing -->

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-graphviz</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- other -->

    <dependency>
      <groupId>org.parboiled</groupId>
      <artifactId>parboiled-scala_2.10</artifactId>
    </dependency>

    <dependency>
      <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
      <artifactId>concurrentlinkedhashmap-lru</artifactId>
    </dependency>

  </dependencies>

</project>
