article.guide
  carousel.deck.container-fluid
    slide.row-fluid
      .col-sm-3
        h3 Introduction
        p.lead Getting started with Neo4j Browser
      .col-sm-6
        p Neo4j Browser is a command driven client, like a web-based shell environment.
          |  It is perfect for running ad-hoc graph queries, with just enough ability
          | to prototype a Neo4j-based application.
        ul.big
          li Developer focused, for writing and running graph queries with Cypher
          li Exportable tabular results of any query result
          li Graph visualization of query results containing nodes and relationships
          li Convenient exploration of Neo4j's REST API
      .col-sm-3
        img.pull-right(src='images/click-next.png', style="position:relative;right:-23px")
    slide.row-fluid
      .col-sm-3
        h3 Editor
        p.lead Command editing and execution
      .col-sm-5
        p The editor is the primary interface for entering and running commands.
          | Enter Cypher queries to work with graph data. Use client-side
          | commands like
          code :help
          |  for other operations.
        ul
          li Single line editing for brief queries or commands
          li Switch to multi-line editing with &lt;shift-enter&gt;
          li Run a query with &lt;ctrl-enter&gt;
          li History is kept for easily retrieving previous commands
      .col-sm-4
          img.img-responsive(src='images/screen_editor.png')
    slide.row-fluid
      .col-sm-3
        h3 Stream
        p.lead Scrolling series of result frames
      .col-sm-5
        p A result frame is created for each command execution, added to the top
          | of the stream to create a scrollable collection in reverse chronological order.
        ul
          li Special frames like data visualization
          li Expand a frame to full screen
          li Remove a specific frame from the stream
          li Clear the stream with the &nbsp;
             code :clear
             |  command
      .col-sm-4
        img.img-responsive(src='images/screen_stream.png')
    slide.row-fluid
      .col-sm-3
        h3 Frame code view
        p.lead Viewing requests and responses
      .col-sm-5
        p The code tab displays everything sent to and received from the Neo4j server, including:
        ul
          li Request URI, HTTP method and headers
          li Reponse HTTP response code and headers
          li Raw request and response content in JSON format
      .col-sm-4
        img.img-responsive(src='images/screen_code_frame.png')
    slide.row-fluid
      .col-sm-3
        h3 Sidebar
        p.lead Convenient clickable access
      .col-sm-5
        p The sidebar expands to reveal different functional panels
          | for common queries and information.
        ul
          li Database metadata and basic information
          li Saved scripts organized into folders
          li Information links for docs and reference
          li Credits and licensing information
      .col-sm-4
        img.img-responsive(src='images/screen_sidebar.png')
    slide.row-fluid
      .col-sm-4
        h3 Next steps
        p.lead Neo4j is like a mashup of a REPL + lightweight IDE + graph visualization.
      .col-sm-4
        h3 Keep getting started
        ul.undecorated
          li
            a(play-topic='concepts') Concepts
            |  - GraphDB 101
          li
            a(play-topic='cypher') Cypher
            |  - query language
      .col-sm-4
        h3 Jump into code
        ul.undecorated
          li
            a(play-topic='movie-graph') The Movie Graph

