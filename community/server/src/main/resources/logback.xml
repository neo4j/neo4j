<!--

    Copyright (c) 2002-2012 "Neo Technology,"
    Network Engine for Objects in Lund AB [http://neotechnology.com]

    This file is part of Neo4j.

    Neo4j is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<configuration>

  <!-- This is a temporary logback configuration, to be looked over
       when we refactor logging. It is needed because we now have a logback
       dependency, and Apache Commons picks that up, defaulting to dumping
       debug output to std.out when it does not have configuration. -->

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <root level="INFO">
    <appender-ref ref="STDOUT" />
  </root>

  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
    <file>${neo_store}/messages.log</file>
    <encoder>
      <pattern>%date{ISO8601} %-5level [%c]: %message%n</pattern>
    </encoder>
  </appender>

  <if condition='property("remote_logging_enabled").contains("true")'>
    <then>
      <appender name="SOCKET" class="ch.qos.logback.classic.net.SocketAppender">
        <remoteHost>${remote_logging_host}</remoteHost>
        <port>${remote_logging_port}</port>
        <reconnectionDelay>10000</reconnectionDelay>
        <includeCallerData>true</includeCallerData>
      </appender>
      <logger name="neo4j">
        <appender-ref ref="SOCKET" />
      </logger>
    </then>
  </if>

  <logger name="neo4j.diagnostics" level="DEBUG">
  </logger>

  <logger name="neo4j" additivity="false">
    <appender-ref ref="FILE" />
  </logger>

  <logger name="neo4j.cypher" additivity="false"/>

  <include resource="custom-logback.xml"/>

</configuration>