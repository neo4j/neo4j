[[server-installation]]
Server Installation
===================

Neo4j can be installed as a server, running either as a headless application or system service.

1. Download the latest release from http://neo4j.org/download
   * select the appropriate version for your platform
2. Extract the contents of the archive
   * refer to the top-level extracted directory as +NEO4J_HOME+
3. Use the scripts in the 'bin' directory
   * for Linux/MacOS, run `$NEO4J_HOME/bin/neo4j start`
   * for Windows, double-click on `%NEO4J_HOME%\bin\Neo4j.bat`
4. Refer to the packaged information in the 'doc' directory for details

For information on High Availability, please refer to <<ha>>.

== As a Windows service ==

With administrative rights, Neo4j can be installed as a Windows service.

1. Click Start -> All Programs -> Accessories
2. Right click Command Prompt -> Run as Administrator
3. Provide authorization and/or the Administrator password
4. Navigate to `%NEO4J_HOME%`
5. Run `bin\Neo4j.bat install`

To uninstall, run `bin\Neo4j.bat remove` as Administrator.

To query the status of the service, run `bin\Neo4j.bat status`

To start the service from the command prompt, run `bin\Neo4j.bat start`

To stop the service from the command prompt, run `bin\Neo4j.bat stop`

NOTE: Some users have reported problems on Windows when using the ZoneAlarm firewall.
If you are having problems getting large responses from the server, or if Webadmin does not work, try disabling ZoneAlarm.
Contact ZoneAlarm support to get information on how to resolve this.

== Linux Service ==

Neo4j can participate in the normal system startup and shutdown process.
The following procedure should work on most popular Linux distributions:

1. `cd $NEO4J_HOME`
2. `sudo ./bin/neo4j install`
+
if asked, enter your password to gain super-user privileges

3. `service neo4j-service status`
+
should indicate that the server is not running

4. `service neo4j-service start`
+
will start the server

During installation you will be given the option to select the user Neo4j will run as.
You will be asked to supply a username (defaulting to `neo4j`) and if that user is not present on the system it will be created as a system account and the '$NEO4J_HOME/data' directory will be `chown`'ed to that user.

You are encouraged to create a dedicated user for running the service and for that reason it is suggested that you unpack the distribution package under '/opt' or your site specific optional packages directory.

After installation you may have to do some platform specific configuration and performance tuning.
For that, refer to  <<configuration-linux-notes>>.

To remove the server from the set of startup services, the proper command is

`service neo4j-service remove`
+
which will stop the server, if running, and remove it.

Note that if you chose to create a new user account, on uninstall you will be prompted to remove it from the system.

== Mac OSX ==

=== via Homebrew ===

Using http://mxcl.github.com/homebrew/[Homebrew], to install the latest stable version of Neo4j Server, issue the following command:

[source,shell]
----
brew install neo4j && neo4j start
----

This will get a Neo4j instance running on http://localhost:7474.
The installation files will reside in `ls /usr/local/Cellar/neo4j/community-{NEO4J_VERSION}/libexec/` -- to tweak settings and symlink the database directory if desired.

=== as a Service ===

Neo4j can be installed as a Mac launchd job:

1. `cd $NEO4J_HOME`
2. `./bin/neo4j install`
3. `launchctl list | grep neo`
+
should reveal the launchd "org.neo4j.server.7474" job for running the Neo4j Server

4. `./bin/neo4j status`
+
should indicate that the server is running

5. `launchctl stop org.neo4j.server.7474`
+
should stop the server.
   
6. `launchctl start org.neo4j.server.7474`
+
should start the server again.

To remove the launchctl service, issue the command

`./bin/neo4j remove`

== Multiple Server instances on one machine ==

Neo4j can be set up to run as several instances on one machine, providing for instance several databases for development.

For how to set this up, see <<ha-local-cluster>>.
Just use the Neo4j edition of your choice, follow the guide and remember to not set the servers to run in HA mode.


