[[indexing-batchinsert]]
Index Batch Insertion
=====================

For general notes on batch insertion, see <<batchinsert>>.

Indexing during batch insertion is done using http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/unsafe/batchinsert/BatchInserterIndex.html[BatchInserterIndex] which are provided via http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/unsafe/batchinsert/BatchInserterIndexProvider.html[BatchInserterIndexProvider].
An example:

[snippet,java]
----
component=neo4j-lucene-index
source=examples/ImdbExampleTest.java
tag=batchInsert
----

The configuration parameters are the same as mentioned in <<indexing-create-advanced>>.

[[indexing-batchinsert-best-practices]]
== Best practices ==

Here are some pointers to get the most performance out of +BatchInserterIndex+:

* Try to avoid http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/unsafe/batchinsert/BatchInserterIndex.html#flush%28%29[flushing] too often because each flush will result in all additions (since last flush) to be visible to the querying methods, and publishing those changes can be a performance penalty.
* Have (as big as possible) phases where one phase is either only writes or only reads, and don't forget to flush after a write phase so that those changes becomes visible to the querying methods.
* Enable http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/unsafe/batchinsert/BatchInserterIndex.html#setCacheCapacity%28java.lang.String,%20int%29[caching] for keys you know you're going to do lookups for later on to increase performance significantly (though insertion performance may degrade slightly).

[NOTE]
Changes to the index are available for reading first after they are flushed to disk. 
Thus, for optimal performance, read and lookup operations should be kept to a minimum during batchinsertion since they
involve IO and impact speed negatively.

