<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.neo4j</groupId>
    <artifactId>parent</artifactId>
    <version>2.0-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>

  <groupId>org.neo4j</groupId>
  <artifactId>installer-windows</artifactId>
  <version>1.7-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Neo4j Windows Installer</name>
  <description>Windows installers for the Neo4j Server</description>

  <url>http://components.neo4j.org/${project.artifactId}/${project.version}</url>

  <scm>
    <connection>scm:git:git://github.com/neo4j/neo4j.git</connection>
    <developerConnection>scm:git:git@github.com:neo4j/neo4j.git</developerConnection>
	<url>https://github.com/neo4j/neo4j/tree/master/packaging</url>
  </scm>

  <properties>
    <short-name>installer-windows</short-name>
    <neo4j.version>2.0-SNAPSHOT</neo4j.version>
    <license-text.header>GPL-3-header.txt</license-text.header>

    <buildnumber>0</buildnumber>

    <windows-wrapper.version>4</windows-wrapper.version>
    <windows-wrapper.path>${project.build.outputDirectory}\windows-service-wrapper-${windows-wrapper.version}.jar</windows-wrapper.path>

    <ai.executable>C:\Program Files\Caphyon\Advanced Installer 8.6\bin\x86\AdvancedInstaller.com</ai.executable>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.commands</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.commands</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <id>generate-windows-compliant-version</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                def version = project.properties['neo4j.version']

                // If version does not match "X.Y[.Z]"
                if( !( version =~ /^\d+\.\d+(\.\d+)?$/) ) {
                  // X.Y.Z[CLASSIFIER] to X.Y.Z.[BUILDNUMBER]
                  if( version =~ /^(\d+\.\d+\.\d+)[^\d]+/ ) {
                    match = (version =~ /^(\d+\.\d+\.\d+)[^\d]+/)
                    version = match[0][1] + "." + project.properties['buildnumber']
                  // X.Y[CLASSIFIER] to X.Y.0.[BUILDNUMBER]
                  } else {
                    match = (version =~ /^(\d+\.\d+)[^\d]+/)
                    version = match[0][1] + ".0." + project.properties['buildnumber']
                  }
                }

                project.properties['neo4j.version.windows_compliant'] = version
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>build-installers</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- Unzip the standalone distributions -->
                <unzip
                  src="${project.build.directory}/neo4j-community-${neo4j.version}-windows.zip"
                  dest="${project.build.outputDirectory}" />
                <unzip
                  src="${project.build.directory}/neo4j-advanced-${neo4j.version}-windows.zip"
                  dest="${project.build.outputDirectory}" />
                <unzip
                  src="${project.build.directory}/neo4j-enterprise-${neo4j.version}-windows.zip"
                  dest="${project.build.outputDirectory}" />

                <!-- Move distributions into build folders -->
                <move toDir="${project.build.outputDirectory}/community">
                  <fileset
                    dir="${project.build.outputDirectory}/neo4j-community-${neo4j.version}"
                    includes="**" />
                </move>
                <move toDir="${project.build.outputDirectory}/advanced">
                  <fileset
                    dir="${project.build.outputDirectory}/neo4j-advanced-${neo4j.version}"
                    includes="**" />
                </move>
                <move toDir="${project.build.outputDirectory}/enterprise">
                  <fileset
                    dir="${project.build.outputDirectory}/neo4j-enterprise-${neo4j.version}"
                    includes="**" />
                </move>

                <!-- Create duplicate AdvancedInstaller project for each 
                  distribution -->
                <copy toDir="${project.build.outputDirectory}/community">
                  <fileset dir="${project.build.outputDirectory}/installer"
                    includes="**" />
                </copy>

                <copy toDir="${project.build.outputDirectory}/advanced">
                  <fileset dir="${project.build.outputDirectory}/installer"
                    includes="**" />
                </copy>

                <copy toDir="${project.build.outputDirectory}/enterprise">
                  <fileset dir="${project.build.outputDirectory}/installer"
                    includes="**" />
                </copy>

                <copy toDir="${project.build.outputDirectory}/arbiter">
                  <fileset dir="${project.build.outputDirectory}/enterprise"
                    includes="**" />
                </copy>

                <!-- Run installer projects -->
                <exec executable="${ai.executable}"
                  dir="${project.build.outputDirectory}/community">
                  <arg line="/execute" />
                  <arg line="installer.aip" />
                  <arg line="installer.commands" />
                </exec>
                <exec executable="${ai.executable}"
                  dir="${project.build.outputDirectory}/advanced">
                  <arg line="/execute" />
                  <arg line="installer.aip" />
                  <arg line="installer.commands" />
                </exec>
                <exec executable="${ai.executable}"
                  dir="${project.build.outputDirectory}/enterprise">
                  <arg line="/execute" />
                  <arg line="installer.aip" />
                  <arg line="installer.commands" />
                </exec>

                <!-- For enterprise, create arbiter installer as well -->
                <exec executable="${ai.executable}"
                  dir="${project.build.outputDirectory}/arbiter">
                  <arg line="/execute" />
                  <arg line="arbiter-installer.aip" />
                  <arg line="arbiter-installer.commands" />
                </exec>

                <!-- Copy resulting installers into /target, and give them 
                  appropriate names -->
                <copy
                  file="${project.build.outputDirectory}/community/BuildSetupFiles/installer.msi"
                  toFile="target/neo4j-community-setup-${neo4j.version}.msi" />
                <copy
                  file="${project.build.outputDirectory}/advanced/BuildSetupFiles/installer.msi"
                  toFile="target/neo4j-advanced-setup-${neo4j.version}.msi" />
                <copy
                  file="${project.build.outputDirectory}/enterprise/BuildSetupFiles/installer.msi"
                  toFile="target/neo4j-enterprise-setup-${neo4j.version}.msi" />
                <copy
                  file="${project.build.outputDirectory}/arbiter/BuildSetupFiles/installer.msi"
                  toFile="target/neo4j-arbiter-setup-${neo4j.version}.msi" />

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <!-- This project expects standalone neo4j
      artifacts to be available under /target. You can
      either place them there manually, or activate this
      profile to pull them in from ../standalone/target -->
      <id>pull-standalone-artifacts</id>
      <activation>
        <property>
          <name>!pullArtifacts</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>pull-artifacts</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy
                      toDir="${project.build.directory}"
                      file="${project.baseDir}/../../standalone/target/neo4j-community-${neo4j.version}-windows.zip" />
                    <copy
                      toDir="${project.build.directory}"
                      file="${project.baseDir}/../../standalone/target/neo4j-advanced-${neo4j.version}-windows.zip" />
                    <copy
                      toDir="${project.build.directory}"
                      file="${project.baseDir}/../../standalone/target/neo4j-enterprise-${neo4j.version}-windows.zip" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>neo4j-snapshot-repository</id>
      <name>Publically available Maven 2 repository for Neo4j</name>
      <url>http://m2.neo4j.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>neo4j-release-repository</id>
      <name>Publically available Maven 2 repository for Neo4j</name>
      <url>http://m2.neo4j.org/content/repositories/releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

</project>
