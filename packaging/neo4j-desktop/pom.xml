<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.neo4j.assembly</groupId>
    <artifactId>neo4j-standalone</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <relativePath>../standalone</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.neo4j.build</groupId>
  <artifactId>neo4j-desktop</artifactId>
  <version>3.0.0-SNAPSHOT</version>

  <name>Neo4j Desktop</name>
  <description>Easy-to-use Neo4j database in an .exe</description>

  <properties>
    <neo4j.version>${project.version}</neo4j.version>
    <config.destination>${project.build.outputDirectory}/org/neo4j/desktop/config/</config.destination>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-dbms</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-io</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.neo4j.build.plugins</groupId>
        <artifactId>licensing-maven-plugin</artifactId>
        <configuration>
          <prependText>notice-gpl-prefix.txt</prependText>
        </configuration>
        <executions>
          <execution>
            <id>list-all-licenses-win</id>
            <phase>compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <licensingRequirementFiles>
                <licensingRequirementFile>licensing-requirements-base.xml</licensingRequirementFile>
                <licensingRequirementFile>licensing-requirements-js.xml</licensingRequirementFile>
                <licensingRequirementFile>licensing-requirements-browser.xml</licensingRequirementFile>
                <licensingRequirementFile>licensing-requirements-win.xml</licensingRequirementFile>
                <licensingRequirementFile>licensing-requirements-installer.xml</licensingRequirementFile>
              </licensingRequirementFiles>
              <thirdPartyLicensingFilename>${project.artifactId}-${neo4j.version}-NOTICE-win.txt</thirdPartyLicensingFilename>
              <checkExistingNoticeFile>${project.build.directory}/../src/main/distribution/text/community/NOTICE.txt</checkExistingNoticeFile>
              <listPrependText>list-prefix.txt</listPrependText>
              <listReport>${project.artifactId}-${neo4j.version}-LICENSES-win.txt</listReport>
              <checkExistingLicensesFile>${project.build.directory}/../src/main/distribution/text/community/LICENSES.txt</checkExistingLicensesFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!--This line is needed to prevent maven shade plugin from getting stuck in infinite loop when building dependency reduced POM https://jira.codehaus.org/browse/MSHADE-148-->
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.neo4j.desktop.Neo4jDesktop</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>

              </transformers>

              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>fetch-static-files</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="fetch-static-files">
                <mkdir dir="${project.build.directory}/licenses" />
                <mkdir dir="${project.build.directory}/plugins" />
                <mkdir dir="${project.build.directory}/shell-scripts" />
                <mkdir dir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <fixcrlf file="${project.basedir}/../../community/LICENSE.txt" destDir="${project.build.directory}/licenses" eol="dos" />
                <fixcrlf file="src/main/distribution/text/community/LICENSES.txt" destDir="${project.build.directory}/licenses" eol="dos" />
                <fixcrlf file="src/main/distribution/text/community/NOTICE.txt" destDir="${project.build.directory}/licenses" eol="dos" />
                <fixcrlf file="src/main/distribution/text/plugins/README.txt" destDir="${project.build.directory}/plugins" eol="dos" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/neo4j-shared.sh" todir="${project.build.directory}/shell-scripts" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/neo4j-import" todir="${project.build.directory}/shell-scripts" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/neo4j-shell" todir="${project.build.directory}/shell-scripts" />

                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management.psd1" todir="${project.build.directory}/shell-scripts" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Java.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-KeyValuePairsFromConfFile.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Neo4jEnv.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Neo4jServer.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Neo4jSetting.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Neo4jStatus.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Get-Neo4jWindowsServiceName.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Install-Neo4jServer.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4j.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jAdmin.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jAdmin_Import.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jBackup.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jImport.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jShell.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Invoke-Neo4jUtility.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Neo4j-Management.psm1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Start-Neo4jServer.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Stop-Neo4jServer.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />
                <copy file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/Neo4j-Management/Uninstall-Neo4jServer.ps1" todir="${project.build.directory}/shell-scripts/Neo4j-Management" />

                <fixcrlf file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/neo4j-import.bat" destDir="${project.build.directory}/shell-scripts" eol="dos" />
                <fixcrlf file="${project.basedir}/../standalone/src/main/distribution/shell-scripts/bin/neo4j-shell.bat" destDir="${project.build.directory}/shell-scripts" eol="dos" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <profile>
      <id>install4j</id>
      <activation>
        <property><name>install4j.home</name></property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>

              <execution>
                <id>generate-installer-configuration</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target name="media">
                    <mkdir dir="${project.build.directory}/install4j" />
                    <!--suppress MavenModelInspection -->
                    <condition property="install4j.code.signing.mac.enabled" value="true">
                      <isset property="install4j.mac.pkcs12" />
                    </condition>
                    <property name="install4j.code.signing.mac.enabled" value="false" />
                    <property name="install4j.mac.pkcs12" value="" />
                    <condition property="install4j.code.signing.win.enabled" value="true">
                      <isset property="install4j.win.pkcs12" />
                    </condition>
                    <property name="install4j.code.signing.win.enabled" value="false" />
                    <property name="install4j.win.pkcs12" value="" />
                    <property name="install4j.code.signing" value="&lt;codeSigning macEnabled=&quot;${install4j.code.signing.mac.enabled}&quot; macPkcs12File=&quot;${install4j.mac.pkcs12}&quot; windowsEnabled=&quot;${install4j.code.signing.win.enabled}&quot; windowsKeySource=&quot;pkcs12&quot; windowsPvkFile=&quot;&quot; windowsSpcFile=&quot;&quot; windowsPkcs12File=&quot;${install4j.win.pkcs12}&quot; /&gt;"/>
                    <copy file="${project.basedir}/neo4j-desktop.install4j" toFile="${project.build.directory}/install4j/neo4j-desktop.install4j">
                      <filterset begintoken="@" endtoken="@">
                        <filter token="NEO4J_VERSION" value="${project.version}"/>
                        <!--suppress MavenModelInspection -->
                        <filter token="CODE_SIGNING" value="${install4j.code.signing}"/>
                      </filterset>
                      <filterset begintoken="." endtoken="/">
                        <filter token="/src" value="${project.basedir}/src/"/>
                        <filter token="/target" value="${project.basedir}/target/"/>
                      </filterset>
                    </copy>
                  </target>
                </configuration>
              </execution>

              <execution>
                <id>build-installer</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target name="media">
                    <taskdef name="install4j"
                             classname="com.install4j.Install4JTask"
                             classpath="${install4j.home}\bin\ant.jar"/>

                    <!--suppress MavenModelInspection -->
                    <install4j projectfile="${project.basedir}/target/install4j/neo4j-desktop.install4j"
                               mediatypes="windows,macosArchive"
                               verbose="true"
                               release="${project.version}"
                               winKeystorePassword="${install4j.win.key.store.password}"
                               macKeystorePassword="${install4j.mac.key.store.password}"
                               destination="${project.basedir}/target/install4j" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
