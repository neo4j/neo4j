= Query tuning example

//setup
[source,cypher]
----
CREATE (adam:Person {name: 'Adam'})
CREATE (pernilla:Person {name: 'Pernilla'})
CREATE (david:Person {name: 'David'})
CREATE (emil:Person {name: 'Emil'})
CREATE (Johan:Person {name: 'Johan'})
CREATE (anders:Person {name: 'Anders1'})
CREATE (philip:Person {name: 'Philp'})
CREATE (andres:Person {name: 'Andres'})
CREATE (peter:Person {name: 'Peter'})
CREATE (tobias:Person {name: 'Tobias'})
CREATE (adam)-[:FRIEND]->(pernilla)
CREATE (pernilla)-[:FRIEND]->(david)
----


[source,cypher]
----
PROFILE MATCH (p {name:"Pernilla"})
RETURN p
----

As the number of nodes in the database increase this query will slow down so we'd have a look at the profile output to try and work out why that is:

[source,profiletest]
----
AllNodesScan
----

[source,cypher]
----
PROFILE MATCH (p:Person {name:"Pernilla"})
RETURN p
----

[source,profiletest]
----
NodeByLabelScan
----

[source,cypher]
----
CREATE INDEX ON :Person(name)
----

[source,cypher]
----
PROFILE MATCH (p:Person {name:"Pernilla"})
RETURN p
----

[source,profiletest]
----
NodeIndexSeek
----
