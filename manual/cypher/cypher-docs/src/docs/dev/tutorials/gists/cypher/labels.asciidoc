= Labels, Constraints and Indexes =

Labels are a convenient way to group nodes together.
They are used to restrict queries, define constraints and create indexes.

The following will give an example of how to use labels.
Let's start out adding a constraint -- in this case we decided that all `Movie` node `title`s should be unique.

[source,cypher]
----
CREATE CONSTRAINT ON (movie:Movie) ASSERT movie.title IS UNIQUE
----

[source,querytest]
----
Unique constraints added: 1
----

// console

Note that adding the unique constraint will add an index on that property, so we won't do that separately.
If we drop the constraint, we will have to add an index instead, as needed.

In this case we want an index to speed up finding actors by name in the database:

[source,cypher]
----
CREATE INDEX ON :Actor(name)
----

[source,querytest]
----
Indexes added: 1
----

Indexes can be added at any time.
Constraints can be added after a label is already in use, but that requires that the existing data complies with the constraints.
Note that it will take some time for an index to come online when there's existing data.

Now, let's add some data.

[source,cypher]
----
CREATE (actor:Actor {name: 'Tom Hanks'}),
  (movie:Movie {title: 'Sleepless in Seattle'}),
  (actor)-[:ACTED_IN]->(movie);
----

[source,querytest]
----
Nodes created: 2
Relationships created: 1
Properties set: 2
Labels added: 2
----

Normally you don't specify indexes when querying for data.
They will be used automatically.
This means we can simply look up the Tom Hanks node, and the index will kick in behind the scenes to boost performance.

[source,cypher]
----
MATCH (actor:Actor {name: 'Tom Hanks'})
RETURN actor;
----

[source,querytest]
----
Tom Hanks
1 row
----

Now let's say we want to add another label for a node.
Here's how to do that:

[source,cypher]
----
MATCH (actor:Actor {name: 'Tom Hanks'})
SET actor :American;
----

[source,querytest]
----
Labels added: 1
----

To remove a label from nodes, this is what to do:

[source,cypher]
----
MATCH (actor:Actor {name: 'Tom Hanks'})
REMOVE actor:American;
----

[source,querytest]
----
Labels removed: 1
----

For more information on labels and related topics, see:

* <<graphdb-neo4j-labels>>
* <<cypher-schema>>
* <<query-constraints>>
* <<query-schema-index>>
* <<query-using>>
* <<query-set>>
* <<query-remove>>

