[[property-values-detailed]]
= Property values

Both nodes and relationships can have properties.

Properties are named values where the name is a string.
Property values can be either a primitive or an array of one primitive type.
For example `String`, `int` and `int[]` values are valid for properties.

[NOTE]
.`NULL` is not a valid property value.
====
++NULL++s can instead be modeled by the absence of a key.
====

[[property-value-types]]
.Property value types
[options="header", cols="15m,45,40"]
|========================================================
|Type | Description | Value range
|boolean| | +true+/+false+
|byte|8-bit integer | +-128+ to +127+, inclusive
|short|16-bit integer | +-32768+ to +32767+, inclusive
|int| 32-bit integer | +-2147483648+ to +2147483647+, inclusive
|long| 64-bit integer | +-9223372036854775808+ to +9223372036854775807+, inclusive
|float| 32-bit IEEE 754 floating-point number |
|double| 64-bit IEEE 754 floating-point number |
|char| 16-bit unsigned integers representing Unicode characters | +u0000+ to +uffff+ (+0+ to +65535+)
|String| sequence of Unicode characters |
|========================================================

For further details on float/double values, see http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.2.3[Java Language Specification].
