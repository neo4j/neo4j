<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.neo4j</groupId>
    <artifactId>parent</artifactId>
    <version>2.3.6-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.neo4j.app</groupId>
  <artifactId>neo4j-server-enterprise</artifactId>
  <version>2.3.6-SNAPSHOT</version>

  <name>Neo4j - Enterprise Server</name>
  <description>Standalone Neo4j server application.</description>
  <url>http://components.neo4j.org/${project.artifactId}/${project.version}</url>

  <properties>
    <bundle.namespace>org.neo4j.server.enterprise</bundle.namespace>
    <short-name>server-enterprise</short-name>
    <version-package>server.enterprise</version-package>
    <neo4j-server.mainClass>org.neo4j.server.enterprise.EnterpriseBootstrapper</neo4j-server.mainClass>
    <neo-server.home>target/generated-resources/appassembler/jsw</neo-server.home>
    <neo-server.confdir>target/test-classes/etc/neo-server</neo-server.confdir>
    <felix-fileinstall.version>3.0.2</felix-fileinstall.version>
    <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>

    <!-- Run integration tests against a server that is started elsewhere This is used in ServerIntegrationTestFacade,
      which currently assumes external servers to be running at http://localhost:7474/ -->
    <testWithExternalServer>false</testWithExternalServer>


    <webdriver.version>2.42.2</webdriver.version>
    <webdriver.impl.class>org.openqa.selenium.firefox.FirefoxDriver</webdriver.impl.class>
  </properties>

  <packaging>jar</packaging>

  <scm>
	  <url>https://github.com/neo4j/neo4j/tree/master/enterprise/server-enterprise</url>
  </scm>

  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0-standalone.html</url>
      <comments>The software ("Software") developed and owned by Network Engine for
        Objects in Lund AB (referred to in this notice as "Neo Technology") is
        licensed under the GNU AFFERO GENERAL PUBLIC LICENSE Version 3 to all
        third parties and that license is included below.

        However, if you have executed an End User Software License and Services
        Agreement or an OEM Software License and Support Services Agreement, or
        another commercial license agreement with Neo Technology or one of its
        affiliates (each, a "Commercial Agreement"), the terms of the license in
        such Commercial Agreement will supersede the GNU AFFERO GENERAL PUBLIC
        LICENSE Version 3 and you may use the Software solely pursuant to the
        terms of the relevant Commercial Agreement.
      </comments>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server-advanced</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-enterprise</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-io</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-ha</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-shell</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-sources</directory>
      </resource>
      <resource>
        <directory>${basedir}</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>NOTICE.txt</include>
          <include>LICENSE.txt</include>
          <include>CHANGES.txt</include>
          <include>LICENSES.txt</include>
        </includes>
      </resource>
    </resources>


    <plugins>
      <!-- Development execution -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${neo4j-server.mainClass}</mainClass>
          <classpathScope>test</classpathScope>
          <systemProperties>
            <systemProperty>
              <key>org.neo4j.server.properties</key>
              <value>${basedir}/neo4j-home/conf/neo4j-server.properties</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${neo4j-server.mainClass}</mainClass>
                </manifest>
              </archive>
              <excludes>
                <exclude>webadmin-html/**</exclude>
                <exclude>lib/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
          </systemPropertyVariables>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-source-based-documentation</id>
            <phase>${generate-config-docs-phase}</phase>
            <configuration>
              <target>
                <java classname="org.neo4j.tooling.GenerateConfigDocumentation"
                      classpathref="maven.compile.classpath" failonerror="true">
                  <arg value="org.neo4j.server.enterprise.EnterpriseServerSettings" />
                  <arg value="${project.build.directory}/docs/ops/configuration-attributes.asciidoc" />
                </java>
              </target>
            </configuration>
            <goals><goal>run</goal></goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>web-tests</id>
      <activation>
        <property>
          <name>tests</name>
          <value>web</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/webtest/java</source>
                    <!-- Required b/c we use utility classes from here -->
                    <source>src/functionaltest/java</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/*WebTest.java</include>
              </includes>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <!-- An execution that adds src/main/resources to the classpath. Allows changing static files and
        seeing results without restarting server. Done with ant b/c of problems adding local directory to classpath
        when using exec. -->
      <id>webdev-exec</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>

            <configuration>
              <target>
                <property name="classpath" refid="maven.runtime.classpath" />
                <exec executable="java">
                  <arg line="-Dorg.neo4j.server.properties=${basedir}/neo4j-home/conf/neo4j-server.properties" />
                  <arg line="-classpath" />
                  <arg line="${basedir}/src/main/resources:${classpath}" />
                  <arg line="${neo4j-server.mainClass}" />
                </exec>
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- Temporarily disconnected from the rest of the build
      because "brew" is not in maven central. To use this, mvn install
       -->
      <id>webadmin-build</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.voltvoodoo</groupId>
            <artifactId>brew</artifactId>
            <version>1.0-SNAPSHOT</version>
            <executions>
              <execution>
                <id>build-webadmin</id>
                <goals>
                  <goal>compile-haml</goal>
                  <goal>compile-coffeescript</goal>
                  <goal>optimize</goal>
                </goals>
              </execution>
            </executions>

            <configuration>
              <module>webadmin</module>
              <coffeeOutputDir>${basedir}/src/main/resources/webadmin-html/js</coffeeOutputDir>
              <hamlOutputDir>${basedir}/src/main/resources/webadmin-html/js</hamlOutputDir>
              <optimizeSourceDir>${basedir}/src/main/resources/webadmin-html/js</optimizeSourceDir>
              <optimizeOutputDir>${basedir}/src/main/resources/webadmin-html/js</optimizeOutputDir>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Firefox is default implementation, set in properties at the top of this file. -->
    <profile>
      <id>htmlunit</id>
      <properties>
        <webdriver.impl.class>org.openqa.selenium.htmlunit.HtmlUnitDriver</webdriver.impl.class>
      </properties>
    </profile>
    <profile>
      <id>chrome</id>
      <properties>
        <webdriver.impl.class>org.openqa.selenium.chrome.ChromeDriver</webdriver.impl.class>
      </properties>
    </profile>
    <profile>
      <id>ie</id>
      <properties>
        <webdriver.impl.class>org.openqa.selenium.ie.InternetExplorerDriver</webdriver.impl.class>
      </properties>
    </profile>

    <profile>
      <id>initial-build</id>
      <repositories>
        <repository>
          <id>neo4j-dev</id>
          <name>Neo4j Developer Repository</name>
          <url>http://m2.neo4j.org/content/groups/everything/</url>
        </repository>
      </repositories>
    </profile>

  </profiles>

  <repositories>
    <repository>
      <id>selenium-repository</id>
      <url>http://selenium.googlecode.com/svn/repository</url>
    </repository>
    <repository>
      <id>neo4j-release-repository</id>
      <name>Neo4j Maven 2 release repository</name>
      <url>http://m2.neo4j.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>neo4j-snapshot-repository</id>
      <name>Neo4j Maven 2 snapshot repository</name>
      <url>http://m2.neo4j.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

</project>

