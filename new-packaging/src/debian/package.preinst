#!/bin/sh

set -e

NEO4J_LIB_DIR=/var/lib/neo4j
NEO4J_DATA_DIR=/var/lib/neo4j/data

OLD_PLUGINS_LINK=/var/lib/neo4j/plugins
OLD_PLUGINS_DIR=/usr/share/neo4j/plugins
OLD_IMPORT_DIR=/var/lib/data/import
OLD_CERTIFICATES_DIR=/etc/neo4j/ssl

NEW_CERTIFICATES_DIR=/var/lib/neo4j/certificates
NEW_PLUGINS_DIR=/var/lib/neo4j/plugins
NEW_IMPORT_DIR=/var/lib/neo4j/import

NEO4J_OVERRIDE_DIR="/etc/systemd/system/neo4j.service.d"
NEO4J_OVERRIDE_FILE="${NEO4J_OVERRIDE_DIR}/override.conf"

case "$1" in
  upgrade)
    # Migrate variables defined in defaults file to systemd
    # overrides only if the system has systemd and no overrides
    # exists yet (they can be named anything in the dir)
    if [ $(which systemctl) ] && [ -r /etc/default/neo4j ] && ! [ -d "${NEO4J_OVERRIDE_DIR}" ]; then
      (
        . /etc/default/neo4j

        # Only do it if something was actually defined in it
        if [ -n "${NEO4J_ULIMIT_NOFILE}" ] || [ -n "${NEO4J_SHUTDOWN_TIMEOUT}" ] || [ -n "${NEO4J_USER}" ]; then
          echo "Migrating /etc/default/neo4j settings to ${NEO4J_OVERRIDE_FILE}"

          mkdir -p ${NEO4J_OVERRIDE_DIR}

          echo "[Service]" >> ${NEO4J_OVERRIDE_FILE}
          [ -n "${NEO4J_ULIMIT_NOFILE}" ] && echo "LimitNOFILE=${NEO4J_ULIMIT_NOFILE}" >> ${NEO4J_OVERRIDE_FILE}
          [ -n "${NEO4J_SHUTDOWN_TIMEOUT}" ] && echo "TimeoutSec=${NEO4J_SHUTDOWN_TIMEOUT}" >> ${NEO4J_OVERRIDE_FILE}
          [ -n "${NEO4J_USER}" ] && echo "User=${NEO4J_USER}" >> ${NEO4J_OVERRIDE_FILE}
        fi
      )
    fi
    case "$2" in
      2.*)
        service neo4j-service stop

        dpkg-maintscript-helper rm_conffile "/etc/init.d/neo4j-service" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo4j/README.txt" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo4j/neo4j-http-logging.xml" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo4j/neo4j-server.properties" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo4j/neo4j.properties" -- "$@"

        update-rc.d neo4j-service remove

        if [ -d "${OLD_CERTIFICATES_DIR}" ]; then
          mkdir -p "${NEW_CERTIFICATES_DIR}" && chown neo4j:nogroup "${NEW_CERTIFICATES_DIR}" && chmod 0755 "${NEW_CERTIFICATES_DIR}"
          mv "${OLD_CERTIFICATES_DIR}"/snakeoil.cert "${NEW_CERTIFICATES_DIR}"/neo4j.cert
          mv "${OLD_CERTIFICATES_DIR}"/snakeoil.key "${NEW_CERTIFICATES_DIR}"/neo4j.key
          if [ -n "$(ls -A ${OLD_CERTIFICATES_DIR})" ]; then
            mv "${OLD_CERTIFICATES_DIR}"/* "${NEW_CERTIFICATES_DIR}"
          fi
          rmdir "${OLD_CERTIFICATES_DIR}"
        fi

        if [ -L "${OLD_PLUGINS_LINK}" ]; then
          rm "${OLD_PLUGINS_LINK}"
        fi

        if [ -d "${NEO4J_PLUGINS_DIR}" ]; then
          mkdir -p "${NEW_PLUGINS_DIR}" && chown neo4j:nogroup "${NEW_PLUGINS_DIR}" && chmod 0755 "${NEW_PLUGINS_DIR}"
          mv "${OLD_PLUGINS_DIR}"/* "${NEW_PLUGINS_DIR}"
        fi

        if [ -d "${NEO4J_IMPORT_DIR}" ]; then
          mkdir -p "${NEW_IMPORT_DIR}" && chown neo4j:nogroup "${NEW_IMPORT_DIR}" && chmod 0755 "${NEW_IMPORT_DIR}"
          mv "${OLD_IMPORT_DIR}"/* "${NEW_IMPORT_DIR}"
        fi

        touch /tmp/neo4j-upgraded-from-2.x
        ;;
    esac
    ;;
esac
