#!/usr/bin/env bash
set -eu
# build-debian-packages:
# Build Debian packages for Neo4j Community from tarball

if [ $# -ne 5 ]
then
  echo "Usage: ${0} <workspace> <package name> <package contents> <distribution> <version>"
  exit 1
fi

workspace=${1}
package_name=${2}
package_contents=${3}
distribution=${4}
version_file=${5}

# Prepare workspace
package_directory=${workspace}/${package_name}/
mkdir -p ${package_directory}
skeleton_directory=src/debian/skeleton
cp -r ${skeleton_directory}/* ${package_directory}

# Rename rules input files to match package
for file in $(cd ${package_directory}/debian && ls package.*)
do
  postfix=$(echo ${file} | cut -c8-)
  newname=${package_directory}/debian/${package_name}${postfix}
  mv ${package_directory}/debian/${file} ${newname}
done

# Copy in package extras
extras_directory=src/debian/extras/${package_name}
cp -r ${extras_directory}/* ${package_directory}

# Copy in tarball contents
cp -r ${package_contents}/* ${package_directory}/server

# Update changelog, control and files with package name etc
version=$(cat ${version_file})
DISTRIBUTION=${distribution} DATE=`date -R` PACKAGE_NAME=${package_name} VERSION=${version} envsubst '${DATE} ${DISTRIBUTION} ${PACKAGE_NAME} ${VERSION}' < ${skeleton_directory}/debian/changelog > ${package_directory}/debian/changelog
[[ ${package_name} = "neo4j" ]] && replaces="neo4j-enterprise" || replaces="neo4j"
PACKAGE_NAME=${package_name} REPLACES=${replaces} envsubst '${PACKAGE_NAME} ${REPLACES}' < ${skeleton_directory}/debian/control > ${package_directory}/debian/control
PACKAGE_NAME=${package_name} VERSION=${version} envsubst '${PACKAGE_NAME} ${VERSION}' < ${skeleton_directory}/debian/files > ${package_directory}/debian/files

# Make the Neo4j wrapper scripts available to debuild
scripts_directory=${package_directory}/server/scripts
mkdir -p ${scripts_directory}
script=src/debian/neo4j-script
cp ${script} ${scripts_directory}/neo4j
cp ${script} ${scripts_directory}/neo4j-admin
cp ${script} ${scripts_directory}/neo4j-import
cp ${script} ${scripts_directory}/neo4j-shell
if [ ${package_name} = "neo4j-enterprise" ]
then
  cp ${script} ${scripts_directory}/neo4j-backup
fi

# Make UDC successful
sed -i 's/unsupported.dbms.udc.source=tarball/unsupported.dbms.udc.source=debian/' ${package_directory}/server/conf/neo4j-wrapper.conf

# Make scripts executable
chmod 700 ${package_directory}/server/bin/*
chmod 700 ${scripts_directory}/*

# build package and metadata files
(cd ${package_directory} && debuild -B -uc -us --lintian-opts --profile debian)
